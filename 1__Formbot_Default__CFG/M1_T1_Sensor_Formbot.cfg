#################################################################################################################
################################# Orbiter Sensor CONFIGURATION ##################################################
#################################################################################################################

#### CONFIG BASED ON THE OFICIAL ORBITER SENSOR Config ( OrbiterSensorV2.2.03.cfg). https://www.orbiterprojects.com/orbiter-filament-sensor/  ####
                          #### Many Thanks to Dr. Róbert Lőrincz for this great project !!! ###

#########Setting Up For More Tools##################

# 'n' is the tool number begining with 0

#1. Copy the Confing and change the name of the config: 'Tn_OrbiterSensor.cfg'
#2. Overall in the config: replace 'T1' with 'Tn'
#3. Overall in the config: replace 't1' with 'tn'
#4. Overall in the config: replace 'filament_change_state11' with 'filament_change_state1n'
#5. Overall in the config: replace 'filament_change_state21' with 'filament_change_state2n'
#6. Overall in the config: replace  'extruder1' with 'extruder1n' 
#7. Give the corresponding pin for 'filament_tn_sense' and 'filament_unload_tn'
#8. Insert the config in 'printer.cfg': [include Tn_OrbiterSensor.cfg]

### !!! For Filament Runout Function to work M600 macro and apropriate RESUME macro are needed !!! ###

#################################################################################################################
################################# CHANGE HERE MACRO CONFIGURABLES################################################
#################################################################################################################

[gcode_macro _SENSOR_t1_VARIABLES]         # change here macro configurables, enable disable functions!*************************
variable_t1_load_temp             :235    # temperature to heat up hotend for filament loading, default is 235
variable_t1_unload_temp           :185    # temperature to heat up hotend for filament un-loading, default is 185
variable_t1_load_min_temp         :190    # minimum hotend set temperature allowed in filament load macro, default is 190
variable_t1_purge_length          :80    # filament extrude amount during load sequenc, hotend purge from old filament, default is 200
variable_t1_purge_speed           :450    # filament extrude speed in mm/min adjust this value lower if flow is too high and extruder1 skips during loading, default is 300
variable_t1_unload_distance       :65     # filament retract distance for unload procedure. this length shall be long enough to extract the filament above the drive gears
variable_t1_disable_autoload      :False  # disable filament autoload feature by setting this variable True
variable_t1_disable_runnout       :False  # disable runnout by setting this variable True
variable_t1_autounload            :False  # disable auto unload filament by setting this variable to True
variable_t1_enable_beep           :False   # uses M300 sound feature, set it True to enable
gcode:

#///////////////////////////filament sensor button macros/////////////////////////////////////////////////
[gcode_button filament_t1_sense]
pin: !PC5 # remove the negation "!" for sensor v1 - use just PA9 as example
press_gcode: # sensor released  -runnout detected!
  ACTIVATE_EXTRUDER EXTRUDER=extruder1
  runnout_init_t1
release_gcode: #gcode macro for filament auto-load, sensor pressed
  ACTIVATE_EXTRUDER EXTRUDER=extruder1
  filament_load_t1_init
#********************************************************************************************************

#////////////////////////////////////////Filament Unload macros/////////////////////////////////////////////////
[gcode_button filament_unload_t1]
pin: !PB0 # remove the negation "!" for sensor v1 - use just PA9 as example
release_gcode:  # filament unload procedure
  ACTIVATE_EXTRUDER EXTRUDER=extruder1
  filament_unload_t1_init
press_gcode: # do not add any macro call here

#################################################################################################################################
####################################### DO NOT CHANGE ANYTHING BELOW THIS LINE!!! ###############################################
#################################################################################################################################
####################################### UNLESS YOU KNOW WHAT YOU ARE DOING OR YOU ARE BORED AND NEED TO DO SOMETHING OR YOU ARE ALONE AND NEED SOMETHING TO MESS UP YOUR LIFE OR YOU CAN DO IT BETTER THAN ME OR YOU ARE A REAL SMARTASS OR JUST BECAUSE YOU CAN OR YOU RUN OUT OF BEAR OR HAS NOTHING BETTER TO DO OR ANY UNREASONABLE REASON
#################################################################################################################################

[respond]
default_type: echo

[force_move]
enable_force_move: True

[gcode_macro runnout_init_t1]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t1_VARIABLES'] %}  
  {% if (printer.print_stats.state == "printing") %}      
    {% if(sensor.t1_disable_runnout|lower == 'false') %}
    filament_change_state11
    {% else %}
    M118 Filament T1 runnout is disabled in the sensor config file!   
    {% endif %}     
  {% endif %} 
  UPDATE_DELAYED_GCODE ID=clear_loadt1busy DURATION=2
  UPDATE_DELAYED_GCODE ID=clear_unloadt1busy DURATION=2    
  SET_GCODE_VARIABLE MACRO=filament_unload_t1 VARIABLE=filamentt1present VALUE=0

[gcode_macro filament_change_state11]
variable_changebusy: 0
variable_temp_target: 0
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t1_VARIABLES'] %}  
  {% if changebusy == 0 %}
    M600
    SET_GCODE_VARIABLE MACRO=filament_change_state11 VARIABLE=changebusy VALUE=1       
    M118 Filament T1 runnout detected!       
    filament_change_state21     # comment this line if you do not want to automatically unload filament in case there is a runnout detected.
  {% else %}
  {% endif %}

[gcode_macro filament_change_state21]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t1_VARIABLES'] %}  
  SET_GCODE_VARIABLE MACRO=filament_load_t1 VARIABLE=loadt1busy VALUE=1      
  {% if (sensor.t1_enable_beep|lower == 'true') %} 
    M300 # beep sound
  {% endif %}
  M118 Unloading T1 filament...   
  M83
  G92 E0   
  # {% if printer[printer.toolhead.extruder1].temperature < 185 %} # hardcoded threshold
  {% if (printer.extruder1.can_extrude|lower != 'true')%} # checking for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder1 config (to about 185)
      M118 Hotend T1 heating!        
      SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={sensor.t1_unload_temp} # restore user temp if it was set before loading
      TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={sensor.t1_unload_temp} #wait for reaching filament unload temp
      {% endif %}     
  {% if(printer.extruder1.target == 0) %} # checing for set temperature if is zero than set to 200 / hotend hot but cooling due to set target temp 0
      SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={sensor.t1_unload_temp} # restore user temp if it was set before loading
      TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={sensor.t1_unload_temp} #wait for reaching filament unload temp
  {% endif %} 
  G0 E-5 F3600 	#extract filament to cold end
  G4 P2000 # wait for two seconds
  G0 E5 F3600 # push the filament back 
  G0 E-5 F3600 	#extract filament to cold end
  G0 E-{sensor.t1_unload_distance} F300	# continue extraction slow allow filament to be cooled enough before reaches the gears  
  M400   
  M118 Load new T1 filament! Wait until is loaded, then resume printing.  
  SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET=0 # swicth off heater
  UPDATE_DELAYED_GCODE ID=clear_loadt1busy DURATION=2.5 # timing must be set to clear delay plus 0.5s. is due to wait to remove filament before starting load even in case there is a blob at the tip of the extracted filament which woudl trigger the sensor twice

#############################################END filament auto load macro section END***********************************************************

[gcode_macro filament_load_t1_init]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t1_VARIABLES'] %}
  {% if (printer.print_stats.state != "printing") %}
    {% if(sensor.t1_disable_autoload|lower == 'false') %}
      filament_load_t1
    {% else %}
    M118 Filament T1 auto-load is disabled in the sensor config file!   
    {% endif %} 
  {% else %}    
    M118 Printing! Can't load T1 filament right now!    
  {% endif %} 
  SET_GCODE_VARIABLE MACRO=filament_unload_t1 VARIABLE=filamentt1present VALUE=1
  UPDATE_DELAYED_GCODE ID=clear_changebusy DURATION=2  

[gcode_macro filament_load_t1]
variable_loadt1busy: 0
variable_USER_TEMP: 0
variable_LOAD_TEMP: 0
gcode:
    ACTIVATE_EXTRUDER EXTRUDER=extruder1    
    {% set sensor = printer['gcode_macro _SENSOR_t1_VARIABLES'] %}
    {% if loadt1busy == 0 %} # requires [virtual_sdcard] 
      SET_GCODE_VARIABLE MACRO=filament_load_t1 VARIABLE=loadt1busy VALUE=1
      SET_GCODE_VARIABLE MACRO=filament_unload_t1 VARIABLE=unloadt1busy VALUE=1    
      {% set USER_TEMP = printer.extruder1.target %} # save user set temperature before loading
      {% set LOAD_TEMP = 0 %} 
      #M118 USER TEMP {USER_TEMP}      # echo back for debug only      
        {% if (printer.extruder1.can_extrude|lower != 'true') or (printer.extruder1.target < sensor.t1_load_min_temp) %} # checking for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder1 config (to about 185)                        
          SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={sensor.t1_load_temp} # set user defined load temperature
          {% set LOAD_TEMP = sensor.t1_load_temp %} # save user set temperature before loading           
         M118 Hotend T1 heating! 
      {% endif %}     
    {% if (sensor.t1_enable_beep|lower == 'true') %} 
      M300 # beep sound
    {% endif %}
    M118 Filament T1 loading!  
    M82           #set extruder1 to absolute mode
    G92 E0
    G4 P1500        # wait for 1.5 seconds
    FORCE_MOVE STEPPER=extruder1 DISTANCE=15 VELOCITY=10 ACCEL=1000  # load filament inside the gears force move needs to be enabled    
    TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={LOAD_TEMP} # wait for reaching set temperature    
    TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={USER_TEMP} # wait for reaching set temperature    
    G1 E{sensor.t1_purge_length} F{sensor.t1_purge_speed} # extrude preconfigured purge length
    M400 # wait to complete nozzle purge
    SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={USER_TEMP} # restore user temp if it was set before loading
    M118 Filament T1 load complete!    
    UPDATE_DELAYED_GCODE ID=clear_unloadt1busy DURATION=2   
    {% else %}
      M118 Filament T1 already loaded!    
    {% endif %}  
#############################################END filament auto load macro section END***********************************************************

#############################################filament auto unload macro section*****************************************************************
[gcode_macro filament_unload_t1_init]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t1_VARIABLES'] %}
  {% if (printer.print_stats.state != "printing") %}
    {% if(sensor.t1_autounload|lower == 'false') %}
      filament_unload_t1
    {% else %}
      M118 Filament T1 auto-unload is disabled in the sensor config file!   
    {% endif %} 
  {% else %}   
     M118 Printing! Can't unload T1 filament right now!
  {% endif %}

[gcode_macro filament_unload_t1] 
variable_unloadt1busy: 0
variable_filamentt1present: 0
gcode:
    ACTIVATE_EXTRUDER EXTRUDER=extruder1 
    {% set sensor = printer['gcode_macro _SENSOR_t1_VARIABLES'] %}
    {% if unloadt1busy == 0 %} # requires [virtual_sdcard]  
      SET_GCODE_VARIABLE MACRO=filament_unload_t1 VARIABLE=unloadt1busy VALUE=1
      SET_GCODE_VARIABLE MACRO=filament_load_t1 VARIABLE=loadt1busy VALUE=1
      {% if (sensor.t1_enable_beep|lower == 'true') %} 
        M300 # beep sound
      {% endif %}
      M118 Filament T1 unloading!    
      M83
      G92 E0 
      # {% if (printer.extruder1.can_extrude|lower != 'true') or (printer.extruder1.target == 0)%} # checing for minimum extrusion temperature
      {% if (printer.extruder1.can_extrude|lower != 'true')%} # checing for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder1 config (to about 185)
        M118 Hotend heating!          
        SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={sensor.t1_unload_temp} # restore user temp if it was set before loading
        TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={sensor.t1_unload_temp} # wait for reaching configured unload temperature
      {% endif %}
      {% if(printer.extruder1.target == 0) %} # checing for set temperature if is zero than set to 185 / hotend hot but cooling due to set target temp 0
        TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={sensor.t1_unload_temp} # wait for reaching configured unload temperature
      {% endif %}
      G0 E10 F500 # extruder1 20mm of filament before extracting 
      G0 E-5 F3600 	#extract filament to cold end
      G4 P2000 # wait for two seconds
      G0 E6 F3600 # push the filament back 
      G0 E-10 F3600 	#extract filament to cold end
      G0 E-{sensor.t1_unload_distance} F300	# continue extraction slow allow filament to be cooled enough before reaches the gears  
      M104 S0 T1 
      M400 # wait to complete unload
      M118 Filament T1 unload complete!      
      SET_GCODE_VARIABLE MACRO=filament_load_t1 VARIABLE=loadt1busy VALUE=0     
    {% else %}      
      M118 Nothing to unload from T1!
    {% endif %}

#############################################END filament auto unload macro section END***********************************************************

[delayed_gcode clear_unloadt1busy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_unload_t1 VARIABLE=unloadt1busy VALUE=0
  #M118 Clear Unload busy! 

[delayed_gcode clear_changebusy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_change_state11 VARIABLE=changebusy VALUE=0
  #M118 Clear Load busy!  

[delayed_gcode set_loadt1busy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_load_t1 VARIABLE=loadt1busy VALUE=1
  #M118 Set Load busy! 

[delayed_gcode clear_loadt1busy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_load_t1 VARIABLE=loadt1busy VALUE=0
  #M118 Clear Load busy!  







