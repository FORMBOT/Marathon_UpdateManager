#################################################################################################################
################################# Orbiter Sensor CONFIGURATION ##################################################
#################################################################################################################

#config file version v3.0.02
#release date: 22.12.2023

# PAUSE and RESUME macros are defined at the end of this config file.
# If you prefer using your own p[lease delete them, otherwise define parking position below.

#### CONFIG BASED ON THE OFICIAL ORBITER Smart SENSOR Config ( Klipper Config/Orbiter2_SmartSensor.cfg). https://www.orbiterprojects.com/smart-sensor-for-orbiter-v2/  ####
                          #### Many Thanks to Dr. Róbert Lőrincz for this great project !!! ###

#########Setting Up For More Tools##################

# 'n' is the tool number begining with 0

#1. Copy the Confing and change the name of the config: 'Tn_OrbiterSensor.cfg'
#2. Overall in the config: replace 'T0' with 'Tn'
#3. Overall in the config: replace 't0' with 'tn'
#4. Overall in the config: replace 'Tool0' with 'Tool1'
#5. Overall in the config: replace 'filament_change_state1' with 'filament_change_state1n'
#6. Overall in the config: replace 'filament_change_state2' with 'filament_change_state2n'
#7. Overall in the config: replace  'extruder' with 'extrudern' 
#8. Give the corresponding pin for 'filament_switch_sensor' and 'gcode_button filament_unload_t0'
#9. Insert the config in 'printer.cfg': [include Tn_OrbiterSensor.cfg]


#################################################################################################################
################################# CHANGE HERE MACRO CONFIGURABLES################################################
#################################################################################################################

[gcode_macro _SENSOR_t0_VARIABLES]         # change here macro configurables, enable disable functions!*************************
variable_t0_load_temp              :235    # temperature to heat up hotend for filament loading, default is 235
variable_t0_unload_temp            :185    # temperature to heat up hotend for filament un-loading, default is 185
variable_t0_load_min_temp          :190    # minimum hotend set temperature allowed in filament load macro, default is 190
variable_t0_purge_length           :100    # filament extrude amount during load sequenc, hotend purge from old filament, default is 200
variable_t0_purge_speed            :450    # filament extrude speed in mm/min adjust this value lower if flow is too high and extruder skips during loading, default is 300
variable_t0_unload_distance        :85     # filament retract distance for unload procedure. this length shall be long enough to extract the filament above the drive gears
variable_t0_disable_autoload       :False  # disable filament autoload feature by setting this variable True
variable_t0_disable_runnout        :False  # disable runnout by setting this variable True
variable_t0_disable_autochange     :False  # disable filament auto change after runnout detection
variable_t0_disable_tangle         :False  # disable tangle by setting this variable True
variable_t0_disable_autounload     :False  # disable auto unload filament by setting this variable to True
variable_t0_enable_beep            :False   # uses M300 sound feature, set it True to enable
gcode:


#///////////////////////////filament sensor button macros/////////////////////////////////////////////////

[filament_switch_sensor T0_sensor]
switch_pin: PC2 
pause_on_runout: False
runout_gcode: 
  runnout_init_t0
insert_gcode: load_Tool0_t0_init
event_delay: 1.0
pause_delay: 0.1

#********************************************************************************************************

#////////////////////////////////////////Filament Unload macros/////////////////////////////////////////////////
[gcode_button filament_unload_t0]
pin: PC1 # remove the negation "!" for sensor v1 - use just PA9 as example
press_gcode:  # filament unload procedure
    unload_tangle_init_t0
release_gcode: # do not add any macro call here

#################################################################################################################################
####################################### DO NOT CHANGE ANYTHING BELOW THIS LINE!!! ###############################################
#################################################################################################################################
####################################### UNLESS YOU KNOW WHAT YOU ARE DOING OR YOU ARE BORED AND NEED TO DO SOMETHING OR YOU ARE ALONE AND NEED SOMETHING TO MESS UP YOUR LIFE OR YOU CAN DO IT BETTER THAN ME OR YOU ARE A REAL SMARTASS OR JUST BECAUSE YOU CAN OR YOU RUN OUT OF BEAR OR HAS NOTHING BETTER TO DO OR ANY UNREASONABLE REASON
#################################################################################################################################

[respond]
default_type: echo

[force_move]
enable_force_move: True

[gcode_macro runnout_init_t0]
gcode:
  ACTIVATE_EXTRUDER EXTRUDER=extruder
  {% set sensor = printer['gcode_macro _SENSOR_t0_VARIABLES'] %}  
  {% if(sensor.t0_disable_runnout|lower == 'false') %}
      filament_change_state1
  {% else %}
    M118 Filament T0 runnout is disabled in the sensor config file!   
  {% endif %} 

[gcode_macro filament_change_state1]
variable_changet0busy: 0
variable_temp_target: 0
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t0_VARIABLES'] %}  
  {% if changet0busy == 0 %}
    PAUSE # call printer pause macro          
    M118 Filament T0 runnout!       
    {% if (sensor.t0_disable_autochange|lower == 'false') %}
      SET_GCODE_VARIABLE MACRO=filament_change_state1 VARIABLE=changet0busy VALUE=1       
      filament_change_state2   # comment this line if you do not want to automatically unload filament in case there is a runnout detected.
    {% endif %}  
  {% endif %}

[gcode_macro filament_change_state2]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t0_VARIABLES'] %}  
  SET_GCODE_VARIABLE MACRO=unload_tangle_init_t0 VARIABLE=loadt0busy VALUE=1  
  {% if (sensor.t0_enable_beep|lower == 'true') %} 
    M300 # beep sound
  {% endif %}
  M118 Unloading T0 filament...   
  M83
  G92 E0   
  # {% if printer[printer.toolhead.extruder].temperature < 185 %} # hardcoded threshold
  {% if (printer.extruder.can_extrude|lower != 'true')%} # checing for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)
      M118 Hotend heating!        
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.t0_unload_temp} # restore user temp if it was set before loading
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.t0_unload_temp} #wait for reaching filament unload temp
      {% endif %}     
  {% if(printer.extruder.target == 0) %} # checing for set temperature if is zero than set to 200 / hotend hot but cooling due to set target temp 0
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.t0_unload_temp} # restore user temp if it was set before loading
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.t0_unload_temp} #wait for reaching filament unload temp
  {% endif %} 
  G0 E-5 F3600 	#extract filament to cold end
  G4 P2000 # wait for two seconds
  G0 E5 F3600 # push the filament back 
  G0 E-5 F3600 	#extract filament to cold end
  G0 E-{sensor.t0_unload_distance} F300	# continue extraction slow allow filament to be cooled enough before reaches the gears  
  M400   
  M118 Load new filament in T0! Wait until is loaded, then resume printing.  
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0 # swicth off heater
  UPDATE_DELAYED_GCODE ID=clear_loadt0busy DURATION=0.5
  UPDATE_DELAYED_GCODE ID=clear_changet0busy DURATION=0.5

[gcode_macro load_Tool0_t0_init]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t0_VARIABLES'] %}
  {% if (printer.print_stats.state != "printing") %}
    {% if(sensor.t0_disable_autoload|lower == 'false') %}
      SET_GCODE_VARIABLE MACRO=unload_tangle_init_t0 VARIABLE=loadt0busy VALUE=1
      filament_load_t0
    {% else %}
    M118 Filament auto-load is disabled in the sensor config file!   
    {% endif %} 
  {% else %}    
    M118 Printing! Can't load filament right now!    
  {% endif %} 
 # SET_GCODE_VARIABLE MACRO=filament_unload_t0 VARIABLE=filamentpresent VALUE=1
  #UPDATE_DELAYED_GCODE ID=clear_changet0busy DURATION=2  

[gcode_macro filament_load_t0]
variable_USER_TEMP: 0
variable_LOAD_TEMP: 0
gcode:
    ACTIVATE_EXTRUDER EXTRUDER=extruder    
    {% set sensor = printer['gcode_macro _SENSOR_t0_VARIABLES'] %}
      {% set USER_TEMP = printer.extruder.target %} # save user set temperature before loading
      {% set LOAD_TEMP = 0 %} 
      #M118 USER TEMP {USER_TEMP}      # echo back for debug only      
        {% if (printer.extruder.can_extrude|lower != 'true') or (printer.extruder.target < sensor.t0_load_min_temp) %} # checking for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)                        
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.t0_load_temp} # set user defined load temperature
          {% set LOAD_TEMP = sensor.t0_load_temp %} # save user set temperature before loading           
         M118 Hotend T0 heating! 
        {% endif %}     
    {% if (sensor.t0_enable_beep|lower == 'true') %} 
      M300 # beep sound
    {% endif %}
    M118 Filament T0 loading!  
    M82           #set extruder to absolute mode
    G92 E0
    G4 P1500        # wait for 1.5 seconds
    FORCE_MOVE STEPPER=extruder DISTANCE=15 VELOCITY=10 ACCEL=1000  # load filament inside the gears force move needs to be enabled    
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={LOAD_TEMP} # wait for reaching set temperature    
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={USER_TEMP} # wait for reaching set temperature    
    G1 E{sensor.t0_purge_length} F{sensor.t0_purge_speed} # extrude preconfigured purge length
    M400 # wait to complete nozzle purge
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={USER_TEMP} # restore user temp if it was set before loading
    M118 Filament T0 load complete!   
    UPDATE_DELAYED_GCODE ID=clear_loadt0busy DURATION=2   
 

#############################################END filament auto load macro section END***********************************************************
#############################################filament auto unload and Tangle macro section*****************************************************************
[gcode_macro unload_tangle_init_t0]
variable_loadt0busy: 0
gcode:
    {% set sensor = printer['gcode_macro _SENSOR_t0_VARIABLES'] %}
  {% if (printer.print_stats.state == "printing") %} # filament tangle detection during printing  
    {% if(sensor.t0_disable_tangle|lower == 'false') %} # run tangle detection macro if enabled
      filament_t0_tangle   
    {% else %} #filament tangle disabled send message to console
      M118 Filament tangle detected on T0, action disabled!
    {% endif %} 
  {% else %} #filament unload button pressed
      {% if (printer.print_stats.state != "paused" and loadt0busy == 0) %} #enable unload if not printing and not paused
        {% if(sensor.t0_disable_autounload|lower == 'false') %} # run unload macro if enabled
          filament_unload_t0
        {% endif %}
      {% endif %}
  {% endif %}

[gcode_macro filament_unload_t0] 
#variable_filamentpresent: 0
gcode:
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    {% set sensor = printer['gcode_macro _SENSOR_t0_VARIABLES'] %}
      {% if (sensor.t0_enable_beep|lower == 'true') %} 
        M300 # beep sound
      {% endif %}
      M118 Filament T0 unloading!    
      M83
      G92 E0     
      {% if (printer.extruder.can_extrude|lower != 'true')%} # checing for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)
        M118 Hotend T0 heating!          
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.t0_unload_temp} # restore user temp if it was set before loading
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.t0_unload_temp} # wait for reaching configured unload temperature
      {% endif %}
      {% if(printer.extruder.target == 0) %} # checing for set temperature if is zero than set to 185 / hotend hot but cooling due to set target temp 0
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.t0_unload_temp} # wait for reaching configured unload temperature
      {% endif %}
      G0 E10 F500 # extruder 20mm of filament before extracting 
      G0 E-5 F3600 	#extract filament to cold end
      G4 P2000 # wait for two seconds
      G0 E6 F3600 # push the filament back 
      G0 E-10 F3600 	#extract filament to cold end
      G0 E-{sensor.t0_unload_distance} F300	# continue extraction slow allow filament to be cooled enough before reaches the gears  
      M104 S0 T0 
      M400 # wait to complete unload
      M118 Filament T0 unload complete!    

[gcode_macro filament_t0_tangle] 
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_t0_VARIABLES'] %}
  M118 Filament tangle detected on T0, print paused!
  {% if (sensor.t0_enable_beep|lower == 'true') %} 
    M300 # beep sound
  {% endif %}
  PAUSE
    

#############################################END filament auto unload macro section END***********************************************************

[delayed_gcode clear_unloadt0busy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_unload_t0 VARIABLE=unloadt0busy VALUE=0
  #M118 Clear Unload busy! 

[delayed_gcode clear_changet0busy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_change_state1 VARIABLE=changet0busy VALUE=0
  #M118 Clear Load busy!  

[delayed_gcode clear_loadt0busy]
gcode:
  SET_GCODE_VARIABLE MACRO=unload_tangle_init_t0 VARIABLE=loadt0busy VALUE=0
  #M118 Clear Load busy!  
