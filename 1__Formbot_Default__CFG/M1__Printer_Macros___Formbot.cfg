####################################
# Mesh Bed Leveling
####################################

[gcode_macro mesh_leveling]
gcode:
    {% set marathon = printer['gcode_macro _MARATHON_VARIABLES'] %} 
      G28 # Home All
      T0
      M190 S{marathon.mesh_tmp}
      Z_TILT_ADJUST
      BED_MESH_CALIBRATE PROFILE=mesh1 METHOD=automatic # Start probing

[gcode_macro save_mesh]
gcode:
      BED_MESH_PROFILE SAVE=mesh1
      SAVE_CONFIG

##########################################
#POWER ON/OFF
##########################################

[output_pin Power]
pin: PC3
value: 1

[gcode_macro Power_ON]
gcode:
  SET_PIN PIN=Power VALUE=1

[gcode_macro Power_OFF]
gcode:
  SET_PIN PIN=Power VALUE=0

##########################################
#Case Light
##########################################


[output_pin caselight]
pin: PB6
value: 1
shutdown_value: 0

[gcode_macro CASELIGHT_ON]
description: Helper: Light on
gcode: SET_PIN PIN=caselight VALUE=1
    
[gcode_macro CASELIGHT_OFF]
description: Helper: Light off
gcode:SET_PIN PIN=caselight VALUE=0

##########################################
#Chamber Fan
##########################################

[gcode_macro M141]
gcode:
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber_fan" target={params.S}

#######################################
# START_PRINT
#######################################

[gcode_macro START_PRINT]
gcode: 
      M118 Start printing...
      G28                                           # Home the printer 
      G92 E0                                        # Reset extruder 
      Z_TILT_ADJUST
      BED_MESH_PROFILE LOAD=mesh1
     # Move to wait position 
      G28 X
      G90
      G1 Y305 Z50


#######################################
# END_PRINT
#######################################

[gcode_macro END_PRINT]
gcode:
    SET_SKEW CLEAR=1
    M104 T0 S0                                #extruder heater off
    M104 T1 S0                                #extruder heater off
    M140 S0                                   #heated bed heater off 
    M106 S0                                   #FANs OFF
    G91                                       #relative positioning
    G1 E-3 F300                               #retract the filament a bit before lifting the nozzle, to release some of the pressure
    M117 RETRACT
    G1 Z+0.5 E-3 X-10 Y-10 F9000              #move Z up a bit and retract filament even more
    G1 E-10
    M117 WIPE OUT
    G90
    {% set axismax = printer.toolhead.axis_maximum %}
	{% set pos     = printer.toolhead.position     %}
	
	#Move toolhead away from finished print
	{% if pos.z <= ( axismax.z - 120 ) %}
		G1 Z{ pos.z + 100 }
        G28 X;
        G1 Y{axismax.y - 20}
    {% else %}
		G1  Z{ axismax.z }
	    G28 X;
        G1 Y{axismax.y - 20}  
    {% endif %}
        M117 PRESENT ITEM
     BED_MESH_CLEAR
     G4 P120000                                # wait 2min
    SET_DUAL_CARRIAGE CARRIAGE=0               #activate T0
    G1 X11 F5000
    SET_DUAL_CARRIAGE CARRIAGE=1               #activate T1
    G1 X422 F5000
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
    M84                                        # Disable steppers
    # Print message on LCD
    M118 MOTORS OFF

#######################################
# END_PRINT Power off
#######################################

[gcode_macro END_PRINT_OFF]
gcode:
    M118 Cooling down and then SHUT DOWN
    G4 P180000                                 # wait 3min
    Power_off                                  # power off



########################################
# Part cooling Fan
########################################

[gcode_macro M106]
gcode:
    {% if params.S is defined %}
        {% if params.S|int == 255 %}
            SET_FAN_SPEED FAN=Tool_0_partfan Speed=1.0
            SET_FAN_SPEED FAN=Tool_1_partfan Speed=1.0
        {% elif params.S|int == 0 %}
            SET_FAN_SPEED FAN=Tool_0_partfan Speed=0.0
            SET_FAN_SPEED FAN=Tool_1_partfan Speed=0.0
        {% else %}
            {% set realspeed = params.S|int / 255 %}
            SET_FAN_SPEED FAN=Tool_0_partfan Speed={realspeed}
            SET_FAN_SPEED FAN=Tool_1_partfan Speed={realspeed}
        {% endif %}
    {% else %}
        SET_FAN_SPEED FAN=Tool_0_partfan Speed=1.0
        SET_FAN_SPEED FAN=Tool_1_partfan Speed=1.0
    {% endif %}

########################################
# Brush_T0 
########################################
[gcode_macro brush_T0]
gcode:
     M118 Brushing T0
     G90
     T0
     G1 Z5
     G1 X135 Y305 F9000
     G1 Z0
     G1 X95 Y305 F12000
     G1 X98 Y307 F12000
     G1 X101 Y302 F12000
     G1 X104 Y307 F12000
     G1 X107 Y302 F12000
     G1 X110 Y307 F12000
     G1 X113 Y302 F12000
     G1 X116 Y307 F12000
     G1 X118 Y302 F12000
     G1 X120 Y307 F12000
     G1 X122 Y302 F12000
     G1 X124 Y307 F12000
     G1 X127 Y302 F12000
     G1 X130 Y307 F12000
     G1 X133 Y302 F12000 
     G1 X135 Y305 F12000
     G1 X95 Y305 F12000
     G1 Z5
     
########################################
# Brush_T1
########################################
[gcode_macro brush_T1]
gcode:
 M118 Brushing T1
     G90
     T1
     G1 Z5
     G1 X334 Y305 F9000
     G1 Z0
     G1 X294 Y305 F12000
     G1 X297 Y307 F12000
     G1 X300 Y302 F12000
     G1 X303 Y307 F12000
     G1 X306 Y302 F12000
     G1 X309 Y307 F12000
     G1 X312 Y302 F12000
     G1 X315 Y307 F12000
     G1 X317 Y302 F12000
     G1 X319 Y307 F12000
     G1 X321 Y302 F12000
     G1 X323 Y307 F12000
     G1 X326 Y302 F12000
     G1 X329 Y307 F12000
     G1 X332 Y302 F12000 
     G1 X334 Y305 F12000
     G1 X294 Y305 F12000
     G1 Z5

######################################################################
# Filament Change M600
######################################################################
# After filament has # been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set z = params.Z|default(10)|int %}                                                   # z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              # set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    # set hotend temp variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=e1temp VALUE={printer['extruder1'].target}
       
        SAVE_GCODE_STATE NAME=PAUSE                                                          # save current print position for resume
        BASE_PAUSE                                                                           # pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       # check that zhop doesn't exceed z max
            G91                                                                              # relative positioning
            G1 Z{z} F900                                                                     # raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  # if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  # absolute positioning    
        G1  X117.5 Y{printer.toolhead.axis_minimum.y+5} F6000                                # move gantry to the front
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      # save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       # set timeout to 12 hours
    {% endif %}
        M118 Print pause for Filament change
        
######################################################################
# Pause
######################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    M118 Pause print...
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                             # z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                                        # set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}              # set hotend temp variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=e1temp VALUE={printer['extruder1'].target}
        SAVE_GCODE_STATE NAME=PAUSE                                                                    # save current print position for resume
        BASE_PAUSE                                                                                     # pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}                 # check that zhop doesn't exceed z max
            G91                                                                                        # relative positioning
            G1 Z{z} F900                                                                               # raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                            # if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                            # absolute positioning    
        G1 X117.5 Y{printer.toolhead.axis_maximum.y-3} F6000                                           # move gantry to the back
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                                # save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        	{% if printer.toolhead.extruder != "extruder1" %}
	    M104 T0 S150
    {% else %}
        M104 T1 S150
	{% endif %}
        #M104 S0                                                                                       # turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=3600                                                                  # set timeout to 12 hours
    {% endif %}

######################################################################
# Resume
######################################################################    

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
variable_e1temp: 0

gcode:
      M118 Resuming printing...
        # Parameters
    {% set e = params.E|default(2.5)|int %}                                                                                # hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %} 
          SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                      # set timeout back to configured value
        {% if etemp > 0 %}
            M109 T0 S{etemp|int}                                                                                           # wait for hotend to heat back up
        {% endif %}
        {% if e1temp > 0 %}
            M109 T1 S{e1temp|int} 
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                                                           # go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                                                                # relative positioning
        M83                                                                                                                # relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                                                      # prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                                                           # lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %} 
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                                                                # restore position
        BASE_RESUME                                                                                                        # resume print
    {% endif %}

########################################################################################
# Cancel
########################################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M118 CANCEL PRINT !
    SET_SKEW CLEAR=1
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}                                            # set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    M104 T0 S0                                                                                                             #extruder heater off
    M104 T1 S0                                                                                                             #extruder1 heater off
    M140 S0                                                                                                                #heated bed heater off 
    M106 S0                                                                                                                #FANs OFF
    G91                                                                                                                    #relative positioning
    G1 E-3 F300                                                                                                            #retract the filament a bit before lifting the nozzle, to release some of the pressure
    M117 RETRACT
    G1 Z+0.5 E-3 X-10 Y-10 F9000                                                                                           #move Z up a bit and retract filament even more
    G1 E-10
    M117 WIPE OUT
    G90
    {% set axismax = printer.toolhead.axis_maximum %}
	{% set pos     = printer.toolhead.position     %}
	
	#Move toolhead away from finished print
	{% if pos.z <= ( axismax.z - 120 ) %}
		G1 Z{ pos.z + 100 }
        G28 X;
        G1 Y{axismax.y - 20}
    {% else %}
		G1  Z{ axismax.z }
	    G28 X;
        G1 Y{axismax.y - 20}  
    {% endif %}
    PARK_{printer.toolhead.extruder}
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
    BED_MESH_CLEAR
    BASE_CANCEL_PRINT

#####################################################################
# Calibrate Probe Offset
####################################################################

[gcode_macro Calibrate_Probe_Offset]
gcode:
      PROBE_CALIBRATE

#####################################################################
# Apply Prope Offset
#####################################################################

[gcode_macro Apply_Probe_Offset]
gcode:
    SAVE_CONFIG

#####################################################################
# Print heads Z-leveling
#####################################################################
[gcode_macro Print_heads_Z_leveling]
gcode:
     G28
     M118 Cleaning the nozzles 
     brush_T1
     brush_T0
     Z_TILT_ADJUST
     M118 Positioning the heads in the middle of the bed
     ACTIVATE_MIRROR_MODE
     G90
     G1 X175 Y149
     M400
     SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
     SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1                                                                                     
     
#####################################################################
# ‘Marlin’ style M808 compatibility macro for SDCard looping
#####################################################################

[gcode_macro M808]
gcode:
      {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}
      {% endif %}
      {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END
      {% endif %}
      {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST
      {% endif %}

#####################################################################
# TFT Controller - Filament unload
#####################################################################

[gcode_macro UNLOAD_FILAMENT]
gcode:
      {% set marathon = printer['gcode_macro _MARATHON_VARIABLES'] %} 
      M118 Unloading filament...
      M83
      G92 E0 
      M118 Hotend heating!
      M104 S{marathon.tmp_uld}                                                                                                 #set temperature and wait      
      G0 E-5 F3600 	                                                                                               #extract filament to cold end
      G4 P2000                                                                                                     #wait for two seconds
      G0 E4.5 F3600                                                                                                #push the filament back 
      G0 E-5 F3600 	                                                                                               #extract filament to cold end
      G0 E{marathon.fil_uld} F300	                                                                                               #continue extraction slow allow filament to be cooled enough before reaches the gears  
      M400
      M118 Filament unload complete!
      M117 Filament unload complete!
      #M104 S0                                                                                                      #turn off the hotend 

#####################################################################
# TFT Controller - Filament load
#####################################################################

[gcode_macro LOAD_FILAMENT]
gcode:
      {% set marathon = printer['gcode_macro _MARATHON_VARIABLES'] %} 
      M118 Loading filament...
      M83
      G92 E0 
      M118 Hotend heating!
      M104 S{marathon.tmp_ld}                                                                                                   #set temperature and wait      
      G0 E{marathon.fil_ld} F400	                                                                                               #Load Filament 
      M400
      M118 Filament load complete!
      M117 Filament load complete!
      #M104 S0                                                                                                      #turn off the hotend
      G0 E-5 F3600 	                                                                                               #extract filament to cold end
